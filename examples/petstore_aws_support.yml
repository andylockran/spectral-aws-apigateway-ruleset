openapi: 3.0.4
info:
  title: ReqValidators Sample
  description: Validation tests
  version: 1.0.0
  contact: 
    email: andy@zrmt.com
servers:
- url: "/{basePath}"
  variables:
    basePath:
      default: "/v1"
tags:
  - name: pet
    description: Describes pets
paths:
  "/validation":
    get:
      tags:
        - pet
      parameters:
      - name: q1
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            test-method-response-header:
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArrayOfError"
      x-amazon-apigateway-request-validator: params-only
      x-amazon-apigateway-integration:
        uri: http://petstore-demo-endpoint.execute-api.com/petstore/pets
        httpMethod: GET
        responses:
          default:
            statusCode: '400'
            responseParameters:
              method.response.header.test-method-response-header: "'static value'"
            responseTemplates:
              application/xml: xml 400 response template
              application/json: json 400 response template
          2\d{2}:
            statusCode: '200'
        requestParameters:
          integration.request.querystring.type: method.request.querystring.q1
        passthroughBehavior: when_no_match
        type: http
    post:
      operationId: postPets
      description: Posts validation
      tags:
        - pet
      parameters:
      - name: h1
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestBodyModel"
        required: true
      responses:
        '200':
          description: 200 response
          headers:
            test-method-response-header:
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArrayOfError"
      x-amazon-apigateway-request-validator: all
      x-amazon-apigateway-integration:
        uri: http://petstore-demo-endpoint.execute-api.com/petstore/pets
        httpMethod: POST
        responses:
          default:
            statusCode: '400'
            responseParameters:
              method.response.header.test-method-response-header: "'static value'"
            responseTemplates:
              application/xml: xml 400 response template
              application/json: json 400 response template
          2\d{2}:
            statusCode: '200'
        requestParameters:
          integration.request.header.custom_h1: method.request.header.h1
        passthroughBehavior: when_no_match
        type: http
components:
  schemas:
    RequestBodyModel:
      required:
      - name
      - price
      - type
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
          - dog
          - cat
          - fish
        name:
          type: string
        price:
          maximum: 500
          minimum: 25
          type: number
    ArrayOfError:
      type: array
      items:
        "$ref": "#/components/schemas/Error"
    Error:
      type: object
x-amazon-apigateway-request-validators:
  all:
    validateRequestParameters: true
    validateRequestBody: true
  params-only:
    validateRequestParameters: true
    validateRequestBody: false
